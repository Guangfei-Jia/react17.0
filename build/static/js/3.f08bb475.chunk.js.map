{"version":3,"sources":["pages/system/menu/index.tsx","hooks/useRequestH.tsx"],"names":["Menu","useRequestH","menuUrl","list","data","isLoading","isError","columns","setUrl","title","dataIndex","key","render","text","width","record","size","rowKey","dataSource","RequestHook","method","reqUrl","initQuery","useState","setData","url","query","setQuery","setIsLoading","setIsError","useEffect","a","getAction","res","postAction","putAction","deleteAction","rows","getData"],"mappings":"oGAAA,2DAyDeA,UA5CC,WACZ,MAA2CC,YAAY,OAAOC,IAAQC,KAAK,IAApEC,EAAP,EAAOA,KAAMC,EAAb,EAAaA,UAAWC,EAAxB,EAAwBA,QAClBC,GADN,EAAiCC,OACjB,CACZ,CACIC,MAAO,2BACPC,UAAW,OACXC,IAAK,QAET,CACIF,MAAO,2BACPC,UAAW,aACXC,IAAK,cAET,CACIF,MAAO,2BACPC,UAAW,cACXC,IAAK,cACLC,OAAQ,SAACC,GACL,OAAgB,IAATA,EAAa,eAAgB,IAATA,EAAa,eAAe,IAATA,EAAa,eAAO,KAG1E,CACIJ,MAAO,eACPE,IAAK,SACLG,MAAO,MACPF,OAAQ,SAACC,EAAUE,GAAX,OACN,eAAC,IAAD,CAAOC,KAAK,SAAZ,UACE,yDACA,6CACA,oDAKZ,OAAGV,EAAgB,wCAChBD,EAAkB,0CAEjB,cAAC,IAAD,CACAE,QAASA,EACTU,OAAO,KACPC,WAAYd,M,uFCDLe,IAxCK,SAACC,EAAcC,EAAcC,GAC7C,MAAwBC,mBAAS,IAAjC,mBAAOnB,EAAP,KAAaoB,EAAb,KACA,EAAsBD,mBAASF,GAA/B,mBAAOI,EAAP,KAAYjB,EAAZ,KACA,EAA0Be,mBAASD,GAAnC,mBAAOI,EAAP,KAAcC,EAAd,KACA,EAAkCJ,oBAAS,GAA3C,mBAAOlB,EAAP,KAAkBuB,EAAlB,KACA,EAA8BL,oBAAS,GAAvC,mBAAOjB,EAAP,KAAgBuB,EAAhB,KAgCA,OA/BAC,qBAAU,YACO,uCAAG,4BAAAC,EAAA,sDACZF,GAAW,GACXD,GAAa,GAFD,cAKAR,EALA,OAMC,QAND,OASC,SATD,QAYC,QAZD,QAeC,WAfD,wCAOYY,YAAUP,EAAKC,GAP3B,cAOAO,EAPA,qDAUYC,YAAWT,EAAKC,GAV5B,eAUAO,EAVA,qDAaYE,YAAUV,EAAKC,GAb3B,eAaAO,EAbA,qDAgBYG,YAAaX,EAAKC,GAhB9B,eAgBAO,EAhBA,qDAmBYC,YAAWT,EAAKC,GAnB5B,eAmBAO,EAnBA,oCAsBRT,EAAQS,EAAI7B,KAAKiC,MAtBT,kDAwBRR,GAAW,GAxBH,QA0BZD,GAAa,GA1BD,0DAAH,qDA4BbU,KACF,CAACb,EAAKC,IACD,CAACtB,OAAMC,YAAWC,UAASE,SAAQmB","file":"static/js/3.f08bb475.chunk.js","sourcesContent":["/*\n * @Descripttion: \n * @version: \n * @Author: fei\n * @Date: 2021-09-23 14:57:25\n * @LastEditors: fei\n * @LastEditTime: 2021-12-03 14:40:33\n */\nimport React, { FC } from 'react';\nimport { Table, Space } from 'antd';\nimport { menuUrl } from '@/api'\nimport useRequestH from '@/hooks/useRequestH'\n\nconst Menu:FC = () => {\n    const {data, isLoading, isError, setUrl} = useRequestH('post',menuUrl.list,{});\n    const columns = [\n        {\n            title: '菜单名称',\n            dataIndex: 'name',\n            key: 'name',\n        },\n        {\n            title: '菜单路由',\n            dataIndex: 'router_url',\n            key: 'router_url',\n        },\n        {\n            title: '菜单类型',\n            dataIndex: 'router_type',\n            key: 'router_type',\n            render: (text:Number) => {\n                return text === 1 ? \"菜单\" : text === 2 ? \"内页\" :text === 3 ? \"按钮\" : \"\";\n            }\n        },\n        {\n            title: '操作',\n            key: 'action',\n            width: '18%',\n            render: (text:any, record:any) => (\n              <Space size=\"middle\">\n                <a>添加下级</a>\n                <a>编辑</a>\n                <a>删除</a>\n              </Space>\n            ),\n          },\n    ]\n    if(isError) return <div>error</div>\n    if(isLoading) return <div>loading</div>\n    return (\n        <Table\n        columns={columns}\n        rowKey=\"id\"\n        dataSource={data}\n        />\n    )\n}\nexport default Menu;","/*\n * @Descripttion: \n * @version: \n * @Author: fei\n * @Date: 2021-11-22 14:46:24\n * @LastEditors: fei\n * @LastEditTime: 2021-12-07 14:10:40\n */\n\nimport { getAction,postAction,putAction,deleteAction } from \"@/api/axios\";\nimport { useEffect, useState } from \"react\";\n\nconst RequestHook = (method:string,reqUrl:string,initQuery:object) => {\n    const [data, setData] = useState([]);\n    const [url, setUrl] = useState(reqUrl);\n    const [query, setQuery] = useState(initQuery);\n    const [isLoading, setIsLoading] = useState(false);\n    const [isError, setIsError] = useState(false);\n    useEffect(() => {\n        const getData = async () => {\n            setIsError(false);\n            setIsLoading(true);\n            try {\n                let res:any;\n                switch (method) {\n                    case 'get':\n                        res = await getAction(url, query);\n                        break;\n                    case 'post':\n                        res = await postAction(url, query);\n                        break;\n                    case 'put':\n                        res = await putAction(url, query);\n                        break;\n                    case 'delete':\n                        res = await deleteAction(url, query);\n                        break;\n                    default:\n                        res = await postAction(url, query);\n                        break;\n                }\n                setData(res.data.rows);\n            } catch (error) {\n                setIsError(true);\n            }\n            setIsLoading(false);\n        }\n        getData();\n    },[url, query])\n    return {data, isLoading, isError, setUrl, setQuery};\n}\n\nexport default RequestHook;"],"sourceRoot":""}